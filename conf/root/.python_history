import libvirt
LIBVIRT_URI = 'qemu+unix:///system'
con = libvirt.open(LIBVIRT_URI)
con.isAlive()
bool(con.isAlive())
exit()
from middlewared.plugins.interface.netif import netif
nic_attach = None
interfaces = netif.list_interfaces()
bridge=None
netif.RoutingTable().default_route_ipv4.interface
nic_attach = netif.RoutingTable().default_route_ipv4.interface
nic = netif.get_interface(nic_attach)
netif.InterfaceFlags.UP not in nic.flags
nic.up()
exit()
from middlewared.plugins.interface.netif import netif
interfaces = netif.list_interfaces()
bridge = netif.get_interface('bridge')
bridge.members
nic_attach = netif.RoutingTable().default_route_ipv4.interface
nic_attach
bridge.add_member(nic_attach)
exit()
from middlewared.plugins.interface.netif import netif
bridge = netif.get_interface('bridge')
bridge.members
exit()
from middlewared.plugins.interface.netif import netif
netif.create_interface('bridge')
netif.create_interface('bridge0')
netif.list_interfaces()
netif.list_interfaces().keys()
exit()
from middlewared.client import Client as cl
c=cl()
d = c.call('vm.device.query')
d
d = c.call('vm.device.query', [['id', '>', 50]])
d
devices = d
for d in devices:
	c.call('vm.device.update', d['id'], {**d, 'attributes': {**d['attributes'], 'type': 'AHCI'}})
for d in devices:
	c.call('vm.device.update', d.pop('id'), {**d, 'attributes': {**d['attributes'], 'type': 'AHCI'}})
c.call('datastore.delete', 'vm.device', [["id", ">", 50]])
c=cl()
c.call('datastore.delete', 'vm.device', [["id", ">", 50]])
exit()
import platform
platform.processor()
import cpuinfo
exit()
